<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="$(SolutionDir)\SimpleEntityFramework.Common\bin\debug\SimpleEntityFramework.Common.dll"#>
<#@ import namespace="SimpleEntityFramework.Common"#>
<#@ import namespace="SimpleEntityFramework.Common.ModelsHelper"#>
<#@ assembly name="System.Core.dll" #>
<#@ assembly name="System.Data.dll" #>
<#@ assembly name="System.Data.DataSetExtensions.dll" #>
<#@ assembly name="System.Xml.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
using System;

//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由T4模板自动生成
//     生成时间 <#=DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")#> Modify by Ocean
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
namespace SimpleEntityFramework.IDAL
{
	/// <summary>
    /// 数据层大接口，包含所有数据层接口访问方式
    /// </summary>
	public partial interface IDbPool
	{
<#
	string projectiDir = Host.ResolveAssemblyReference("$(ProjectDir)");
	string modelPath = Path.Combine(projectiDir,"bin","debug","SimpleEntityFramework.Models"+".dll"); 
	string superPath = Path.Combine(projectiDir,"bin","debug","SimpleEntityFramework.ModelBase"+".dll"); 
    string superName = "SimpleEntityFramework.ModelBase.ModelBase";
	List<Type> modelTypes = GenerationHelper.GetModels(modelPath,superPath,superName);
	int i = 0;
	foreach(var modelType in modelTypes)
	{
#>  
		#region <#= i.ToString("00") #> - I<#=modelType.Name#>Dal接口访问对象

		/// <summary>
		/// I<#=modelType.Name#>Dal接口访问对象
		/// </summary>		
		I<#=modelType.Name#>Dal <#=modelType.Name#>Dal{get;set;}
	
		#endregion
<# 
	i++;
	} 
#>
	}
}